import React from "react";
import PropTypes from "prop-types";

const SvgComponent = ({ size, width, height, ...otherProps }) => {
  if (size !== height) {
    width = width * (size / height);
    height = height * (size / height);
  }

  return (
    <svg
      width={width}
      height={height}
      viewBox="0 0 37 25"
      size={size}
      {...otherProps}
    >
      <defs>
        <clipPath id="Singapore_svg_clip1">
          <path d="M 0 0 L 37 0 L 37 12 L 0 12 Z M 0 0 " />
        </clipPath>
        <clipPath id="Singapore_svg_clip2">
          <path d="M 3.363281 0 L 33.625 0 C 35.484375 0 36.988281 1.527344 36.988281 3.40625 L 36.988281 21.582031 C 36.988281 23.464844 35.484375 24.992188 33.625 24.992188 L 3.363281 24.992188 C 1.503906 24.992188 0 23.464844 0 21.582031 L 0 3.40625 C 0 1.527344 1.503906 0 3.363281 0 Z M 3.363281 0 " />
        </clipPath>
      </defs>
      <g id="Singapore_svg_surface1">
        <path
          style={{
            stroke: "none",
            fillRule: "evenodd",
            fill: "rgb(96.078431%,96.862745%,97.647059%)",
            fillOpacity: 1,
          }}
          d="M 3.363281 0 L 33.625 0 C 35.484375 0 36.988281 1.527344 36.988281 3.40625 L 36.988281 21.582031 C 36.988281 23.464844 35.484375 24.992188 33.625 24.992188 L 3.363281 24.992188 C 1.503906 24.992188 0 23.464844 0 21.582031 L 0 3.40625 C 0 1.527344 1.503906 0 3.363281 0 Z M 3.363281 0 "
        />
        <g clipPath="url(#Singapore_svg_clip1)" clipRule="nonzero">
          <g clipPath="url(#Singapore_svg_clip2)" clipRule="evenodd">
            <path
              style={{
                stroke: "none",
                fillRule: "evenodd",
                fill: "rgb(92.941176%,33.333333%,39.607843%)",
                fillOpacity: 1,
              }}
              d="M 0 0 L 36.988281 0 L 36.988281 11.167969 L 0 11.167969 Z M 0 0 "
            />
          </g>
        </g>
        <path
          style={{
            stroke: "none",
            fillRule: "evenodd",
            fill: "rgb(96.078431%,96.862745%,97.647059%)",
            fillOpacity: 1,
          }}
          d="M 8.503906 7.996094 C 8.496094 7.996094 8.492188 8 8.488281 8 C 8.351562 8.074219 8.203125 8.136719 8.046875 8.1875 C 6.558594 8.679688 4.941406 7.910156 4.433594 6.46875 C 4.335938 6.191406 4.289062 5.910156 4.28125 5.632812 C 4.269531 5.355469 4.304688 5.070312 4.382812 4.789062 C 4.804688 3.324219 6.371094 2.464844 7.886719 2.867188 C 8.046875 2.910156 8.195312 2.964844 8.339844 3.03125 C 8.34375 3.03125 8.347656 3.035156 8.351562 3.035156 C 8.40625 3.050781 8.457031 3.019531 8.472656 2.96875 C 8.484375 2.929688 8.464844 2.886719 8.429688 2.867188 C 8.070312 2.589844 7.644531 2.375 7.171875 2.246094 C 5.269531 1.738281 3.296875 2.816406 2.773438 4.65625 C 2.675781 4.996094 2.632812 5.339844 2.644531 5.679688 C 2.652344 6.015625 2.714844 6.355469 2.832031 6.691406 C 3.46875 8.496094 5.5 9.464844 7.371094 8.847656 C 7.835938 8.695312 8.246094 8.457031 8.589844 8.160156 C 8.625 8.136719 8.640625 8.09375 8.625 8.054688 C 8.609375 8.003906 8.550781 7.980469 8.503906 7.996094 Z M 11.324219 7.761719 C 11.246094 7.816406 11.199219 7.785156 11.222656 7.695312 L 11.308594 7.351562 C 11.332031 7.261719 11.289062 7.136719 11.214844 7.074219 L 10.953125 6.859375 C 10.878906 6.796875 10.898438 6.742188 10.996094 6.742188 L 11.363281 6.730469 C 11.460938 6.730469 11.5625 6.652344 11.589844 6.5625 L 11.703125 6.1875 C 11.730469 6.097656 11.78125 6.097656 11.816406 6.1875 L 11.953125 6.554688 C 11.984375 6.644531 12.09375 6.714844 12.191406 6.71875 L 12.5625 6.722656 C 12.660156 6.722656 12.679688 6.773438 12.605469 6.835938 L 12.324219 7.074219 C 12.25 7.136719 12.210938 7.261719 12.238281 7.351562 L 12.328125 7.652344 C 12.355469 7.742188 12.308594 7.777344 12.226562 7.726562 L 11.925781 7.546875 C 11.839844 7.496094 11.707031 7.503906 11.628906 7.554688 Z M 9.324219 7.761719 C 9.242188 7.816406 9.195312 7.785156 9.21875 7.695312 L 9.304688 7.351562 C 9.328125 7.261719 9.289062 7.136719 9.214844 7.074219 L 8.953125 6.859375 C 8.878906 6.796875 8.898438 6.742188 8.996094 6.742188 L 9.359375 6.730469 C 9.457031 6.730469 9.5625 6.652344 9.589844 6.5625 L 9.703125 6.1875 C 9.730469 6.097656 9.78125 6.097656 9.8125 6.1875 L 9.953125 6.554688 C 9.984375 6.644531 10.089844 6.714844 10.1875 6.71875 L 10.5625 6.722656 C 10.660156 6.722656 10.679688 6.773438 10.605469 6.835938 L 10.320312 7.074219 C 10.25 7.136719 10.210938 7.261719 10.238281 7.351562 L 10.328125 7.652344 C 10.355469 7.742188 10.308594 7.777344 10.226562 7.726562 L 9.921875 7.546875 C 9.839844 7.496094 9.707031 7.503906 9.625 7.554688 Z M 8.640625 5.925781 C 8.558594 5.980469 8.511719 5.949219 8.535156 5.859375 L 8.621094 5.515625 C 8.644531 5.425781 8.601562 5.300781 8.527344 5.238281 L 8.269531 5.023438 C 8.195312 4.960938 8.214844 4.90625 8.3125 4.90625 L 8.675781 4.894531 C 8.773438 4.894531 8.875 4.816406 8.902344 4.726562 L 9.019531 4.351562 C 9.046875 4.261719 9.097656 4.261719 9.128906 4.347656 L 9.265625 4.71875 C 9.300781 4.804688 9.40625 4.878906 9.503906 4.882812 L 9.878906 4.882812 C 9.976562 4.886719 9.996094 4.9375 9.921875 5 L 9.636719 5.238281 C 9.5625 5.296875 9.527344 5.421875 9.554688 5.515625 L 9.644531 5.816406 C 9.671875 5.90625 9.625 5.941406 9.542969 5.890625 L 9.238281 5.710938 C 9.15625 5.660156 9.023438 5.664062 8.941406 5.71875 Z M 11.882812 5.925781 C 11.804688 5.980469 11.757812 5.949219 11.78125 5.859375 L 11.867188 5.515625 C 11.890625 5.425781 11.847656 5.300781 11.773438 5.238281 L 11.511719 5.023438 C 11.4375 4.960938 11.457031 4.90625 11.554688 4.90625 L 11.921875 4.894531 C 12.019531 4.894531 12.121094 4.816406 12.148438 4.726562 L 12.265625 4.351562 C 12.292969 4.261719 12.339844 4.261719 12.375 4.347656 L 12.511719 4.71875 C 12.546875 4.804688 12.652344 4.878906 12.75 4.882812 L 13.121094 4.882812 C 13.21875 4.886719 13.238281 4.9375 13.164062 5 L 12.882812 5.238281 C 12.808594 5.296875 12.769531 5.421875 12.796875 5.515625 L 12.886719 5.816406 C 12.914062 5.90625 12.871094 5.941406 12.785156 5.890625 L 12.484375 5.710938 C 12.402344 5.660156 12.265625 5.664062 12.1875 5.71875 Z M 10.246094 4.585938 C 10.164062 4.640625 10.121094 4.609375 10.140625 4.519531 L 10.230469 4.175781 C 10.25 4.085938 10.210938 3.960938 10.136719 3.898438 L 9.875 3.679688 C 9.800781 3.621094 9.820312 3.566406 9.917969 3.566406 L 10.28125 3.554688 C 10.378906 3.550781 10.484375 3.476562 10.511719 3.386719 L 10.625 3.011719 C 10.652344 2.921875 10.703125 2.917969 10.734375 3.007812 L 10.875 3.378906 C 10.90625 3.464844 11.015625 3.539062 11.113281 3.539062 L 11.484375 3.542969 C 11.582031 3.542969 11.601562 3.597656 11.527344 3.660156 L 11.242188 3.894531 C 11.171875 3.957031 11.132812 4.082031 11.160156 4.171875 L 11.25 4.472656 C 11.277344 4.566406 11.230469 4.597656 11.148438 4.550781 L 10.84375 4.371094 C 10.761719 4.320312 10.628906 4.324219 10.550781 4.378906 Z M 10.246094 4.585938 "
        />
      </g>
    </svg>
  );
};

SvgComponent.propTypes = {
  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
};
SvgComponent.defaultProps = {
  size: "25",
  width: "37",
  height: "25",
};
export default SvgComponent;
